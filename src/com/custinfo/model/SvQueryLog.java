package com.custinfo.model;

// Generated 30 Aug, 2016 5:25:50 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * SvQueryLog generated by hbm2java
 */
@Entity
@Table(name = "sv_query_log", catalog = "db_payroll")
public class SvQueryLog implements java.io.Serializable {

	private Integer queryId;
	private SvTaskMaster svTaskMaster;
	private String queryDesc;
	private String reference;
	private Date startDate;
	private String status;
	private String replyDate;
	private String remark;
	private Integer createdBy;
	private Date createdOn;
	private Integer updatedBy;
	private Date updateOn;
	private Integer deletedBy;
	private Date deletedOn;
	private Byte isDeleted;

	public SvQueryLog() {
	}

	public SvQueryLog(SvTaskMaster svTaskMaster, String queryDesc,
			String reference, Date startDate, String status, String replyDate,
			String remark, Integer createdBy, Date createdOn,
			Integer updatedBy, Date updateOn, Integer deletedBy,
			Date deletedOn, Byte isDeleted) {
		this.svTaskMaster = svTaskMaster;
		this.queryDesc = queryDesc;
		this.reference = reference;
		this.startDate = startDate;
		this.status = status;
		this.replyDate = replyDate;
		this.remark = remark;
		this.createdBy = createdBy;
		this.createdOn = createdOn;
		this.updatedBy = updatedBy;
		this.updateOn = updateOn;
		this.deletedBy = deletedBy;
		this.deletedOn = deletedOn;
		this.isDeleted = isDeleted;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "QueryId", unique = true, nullable = false)
	public Integer getQueryId() {
		return this.queryId;
	}

	public void setQueryId(Integer queryId) {
		this.queryId = queryId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TaskId")
	public SvTaskMaster getSvTaskMaster() {
		return this.svTaskMaster;
	}

	public void setSvTaskMaster(SvTaskMaster svTaskMaster) {
		this.svTaskMaster = svTaskMaster;
	}

	@Column(name = "QueryDesc", length = 5000)
	public String getQueryDesc() {
		return this.queryDesc;
	}

	public void setQueryDesc(String queryDesc) {
		this.queryDesc = queryDesc;
	}

	@Column(name = "Reference", length = 45)
	public String getReference() {
		return this.reference;
	}

	public void setReference(String reference) {
		this.reference = reference;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "StartDate", length = 19)
	public Date getStartDate() {
		return this.startDate;
	}

	public void setStartDate(Date startDate) {
		this.startDate = startDate;
	}

	@Column(name = "Status", length = 45)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@Column(name = "ReplyDate", length = 45)
	public String getReplyDate() {
		return this.replyDate;
	}

	public void setReplyDate(String replyDate) {
		this.replyDate = replyDate;
	}

	@Column(name = "Remark", length = 5000)
	public String getRemark() {
		return this.remark;
	}

	public void setRemark(String remark) {
		this.remark = remark;
	}

	@Column(name = "CreatedBy")
	public Integer getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(Integer createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CreatedOn", length = 19)
	public Date getCreatedOn() {
		return this.createdOn;
	}

	public void setCreatedOn(Date createdOn) {
		this.createdOn = createdOn;
	}

	@Column(name = "UpdatedBy")
	public Integer getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(Integer updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UpdateOn", length = 19)
	public Date getUpdateOn() {
		return this.updateOn;
	}

	public void setUpdateOn(Date updateOn) {
		this.updateOn = updateOn;
	}

	@Column(name = "DeletedBy")
	public Integer getDeletedBy() {
		return this.deletedBy;
	}

	public void setDeletedBy(Integer deletedBy) {
		this.deletedBy = deletedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DeletedOn", length = 19)
	public Date getDeletedOn() {
		return this.deletedOn;
	}

	public void setDeletedOn(Date deletedOn) {
		this.deletedOn = deletedOn;
	}

	@Column(name = "IsDeleted")
	public Byte getIsDeleted() {
		return this.isDeleted;
	}

	public void setIsDeleted(Byte isDeleted) {
		this.isDeleted = isDeleted;
	}

}
