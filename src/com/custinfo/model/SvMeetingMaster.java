package com.custinfo.model;

// Generated 30 Aug, 2016 5:25:50 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * SvMeetingMaster generated by hbm2java
 */
@Entity
@Table(name = "sv_meeting_master", catalog = "db_payroll")
public class SvMeetingMaster implements java.io.Serializable {

	private Integer meetingId;
	private String meetingName;
	private String meetingAgenda;
	private Date startDate;
	private Date endDate;
	private Date startTime;
	private Date endTime;
	private String meetingDesc;
	private String actionItems;
	private String type;
	private Integer typeId;
	private Integer createdBy;
	private Date createdOn;
	private Integer updatedBy;
	private Date updatedOn;
	private Integer deletedBy;
	private Date deletedOn;
	private Byte isDeleted;
	private Set svMeetingAttendeeses = new HashSet(0);

	public SvMeetingMaster() {
	}

	public SvMeetingMaster(String meetingName, String meetingAgenda,
			Date startDate, Date endDate, Date startTime, Date endTime,
			String meetingDesc, String actionItems, String type,
			Integer typeId, Integer createdBy, Date createdOn,
			Integer updatedBy, Date updatedOn, Integer deletedBy,
			Date deletedOn, Byte isDeleted, Set svMeetingAttendeeses) {
		this.meetingName = meetingName;
		this.meetingAgenda = meetingAgenda;
		this.startDate = startDate;
		this.endDate = endDate;
		this.startTime = startTime;
		this.endTime = endTime;
		this.meetingDesc = meetingDesc;
		this.actionItems = actionItems;
		this.type = type;
		this.typeId = typeId;
		this.createdBy = createdBy;
		this.createdOn = createdOn;
		this.updatedBy = updatedBy;
		this.updatedOn = updatedOn;
		this.deletedBy = deletedBy;
		this.deletedOn = deletedOn;
		this.isDeleted = isDeleted;
		this.svMeetingAttendeeses = svMeetingAttendeeses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "MeetingId", unique = true, nullable = false)
	public Integer getMeetingId() {
		return this.meetingId;
	}

	public void setMeetingId(Integer meetingId) {
		this.meetingId = meetingId;
	}

	@Column(name = "MeetingName", length = 300)
	public String getMeetingName() {
		return this.meetingName;
	}

	public void setMeetingName(String meetingName) {
		this.meetingName = meetingName;
	}

	@Column(name = "MeetingAgenda")
	public String getMeetingAgenda() {
		return this.meetingAgenda;
	}

	public void setMeetingAgenda(String meetingAgenda) {
		this.meetingAgenda = meetingAgenda;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "StartDate", length = 19)
	public Date getStartDate() {
		return this.startDate;
	}

	public void setStartDate(Date startDate) {
		this.startDate = startDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "EndDate", length = 19)
	public Date getEndDate() {
		return this.endDate;
	}

	public void setEndDate(Date endDate) {
		this.endDate = endDate;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "StartTime", length = 8)
	public Date getStartTime() {
		return this.startTime;
	}

	public void setStartTime(Date startTime) {
		this.startTime = startTime;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "EndTime", length = 8)
	public Date getEndTime() {
		return this.endTime;
	}

	public void setEndTime(Date endTime) {
		this.endTime = endTime;
	}

	@Column(name = "MeetingDesc")
	public String getMeetingDesc() {
		return this.meetingDesc;
	}

	public void setMeetingDesc(String meetingDesc) {
		this.meetingDesc = meetingDesc;
	}

	@Column(name = "ActionItems")
	public String getActionItems() {
		return this.actionItems;
	}

	public void setActionItems(String actionItems) {
		this.actionItems = actionItems;
	}

	@Column(name = "Type", length = 45)
	public String getType() {
		return this.type;
	}

	public void setType(String type) {
		this.type = type;
	}

	@Column(name = "TypeId")
	public Integer getTypeId() {
		return this.typeId;
	}

	public void setTypeId(Integer typeId) {
		this.typeId = typeId;
	}

	@Column(name = "CreatedBy")
	public Integer getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(Integer createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CreatedOn", length = 19)
	public Date getCreatedOn() {
		return this.createdOn;
	}

	public void setCreatedOn(Date createdOn) {
		this.createdOn = createdOn;
	}

	@Column(name = "UpdatedBy")
	public Integer getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(Integer updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UpdatedOn", length = 19)
	public Date getUpdatedOn() {
		return this.updatedOn;
	}

	public void setUpdatedOn(Date updatedOn) {
		this.updatedOn = updatedOn;
	}

	@Column(name = "DeletedBy")
	public Integer getDeletedBy() {
		return this.deletedBy;
	}

	public void setDeletedBy(Integer deletedBy) {
		this.deletedBy = deletedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DeletedOn", length = 19)
	public Date getDeletedOn() {
		return this.deletedOn;
	}

	public void setDeletedOn(Date deletedOn) {
		this.deletedOn = deletedOn;
	}

	@Column(name = "IsDeleted")
	public Byte getIsDeleted() {
		return this.isDeleted;
	}

	public void setIsDeleted(Byte isDeleted) {
		this.isDeleted = isDeleted;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "svMeetingMaster")
	public Set getSvMeetingAttendeeses() {
		return this.svMeetingAttendeeses;
	}

	public void setSvMeetingAttendeeses(Set svMeetingAttendeeses) {
		this.svMeetingAttendeeses = svMeetingAttendeeses;
	}

}
